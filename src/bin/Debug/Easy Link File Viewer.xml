<?xml version="1.0"?>
<doc>
<assembly>
<name>
Easy Link File Viewer
</name>
</assembly>
<members>
<member name="T:My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:DevCase.Interop.Unmanaged.Win32.Interfaces.CShellLink">
 ----------------------------------------------------------------------------------------------------
 <summary>
 <c>CLSID_ShellLink</c> from <c>ShlGuid.h</c> headers.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="T:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersist">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Provides the CLSID of an object that can be stored persistently in the system.
 <para></para>
 Allows the object to specify which object handler to use in the client process, 
 as it is used in the default implementation of marshaling.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms688695%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersist.GetClassID(System.Guid@)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the class identifier (CLSID) of the object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="refClassID">
 A pointer to the location that receives the CLSID on return.
 <para></para>
 The CLSID is a globally unique identifier (GUID) that uniquely represents an object class that 
 defines the code that can manipulate the object's data.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="T:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersistFile">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Enables an object to be loaded from or saved to a disk file, rather than a storage object or stream.
 <para></para>
 Because the information needed to open a file varies greatly from one application to another, 
 the implementation of <see cref="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersistFile.Load(System.String,System.UInt32)"/> on the object must also open its disk file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms687223%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersistFile.IsDirty">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Determines whether an object has changed since it was last saved to its current file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <returns>
 This method returns <see cref="!:Enums.HResult.S_OK"/> to indicate that the object has changed. Otherwise, it returns <c>S_FALSE</c>.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersistFile.Load(System.String,System.UInt32)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Opens the specified file and initializes an object from the file contents.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="pszFileName">
 The absolute path of the file to be opened.
 </param>
 
 <param name="dwMode">
 The access mode to be used when opening the file.
 <para></para>
 Possible values are taken from the <c>STGM</c> enumeration.
 <para></para>
 The method can treat this value as a suggestion, adding more restrictive permissions if necessary.
 <para></para>
 If <paramref name="dwMode"/> is <c>0</c>, 
 the implementation should open the file using whatever default permissions are used when a user opens the file.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersistFile.Save(System.String,System.Boolean)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Saves a copy of the object to the specified file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="pszFileName">
 The absolute path of the file to which the object should be saved.
 <para></para>
 If <paramref name="pszFileName"/> is <see langword="Nothing"/>, 
 the object should save its data to the current file, if there is one.
 </param>
 
 <param name="fRemember">
 Indicates whether the <paramref name="pszFileName"/> parameter is to be used as the current working file.
 <para></para>
 If <see langword="True"/>, <paramref name="pszFileName"/> becomes the current file and the 
 object should clear its dirty flag after the save.
 <para></para>
 If <see langword="False"/>, this save operation is a <c>Save A Copy As</c> ... operation. 
 In this case, the current file is unchanged and the object should not clear its dirty flag.
 <para></para>
 If <paramref name="pszFileName"/> is <see langword="Nothing"/>, 
 the implementation should ignore the <paramref name="fRemember"/> flag.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersistFile.SaveCompleted(System.String)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Notifies the object that it can write to its file.
 <para></para>
 It does this by notifying the object that it can revert from <c>NoScribble</c> mode 
 (in which it must not write to its file), to <c>Normal</c> mode (in which it can).
 <para></para>
 The component enters <c>NoScribble</c> mode when it receives an <see cref="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersistFile.Save(System.String,System.Boolean)"/> call.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="pszFileName">
 The absolute path of the file where the object was saved previously.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IPersistFile.GetCurFile(System.String)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the current name of the file associated with the object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="ppszFileName">
 The path for the current file or the default file name prompt (such as <c>*.txt</c>).
 <para></para>
 If an error occurs, <paramref name="ppszFileName"/> is set to <see langword="Nothing"/>.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="T:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW">
 ----------------------------------------------------------------------------------------------------
 <summary>
 The <c>IShellLink</c> interface allows Shell links to be created, modified, or resolved.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/es-es/library/windows/desktop/bb774950%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.GetPath(System.Text.StringBuilder,System.Int32,DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW@,DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkGetPathFlags)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the path and file name of a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="file">
 The address of a buffer that receives the path and file name of the target of the Shell link object.
 </param>
 
 <param name="maxPath">
 The size, in characters, of the buffer pointed to by the pszFile parameter, 
 including the terminating null character. 
 <para></para>
 The maximum path size that can be returned is <c>MAX_PATH</c>.
 </param>
 
 <param name="refWin32FindData">
 A pointer to a WIN32_FIND_DATA structure that receives information about the target of the Shell link object.
 <para></para>
 If this parameter is NULL, then no additional information is returned.
 </param>
 
 <param name="flags">
 Flags that specify the type of path information to retrieve.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.GetIDList(System.IntPtr@)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the list of item identifiers for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="refPidl">
 When this method returns, contains the address of a PIDL.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.SetIDList(System.IntPtr)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets the pointer to an item identifier list (PIDL) for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="pidl">
 The object's fully qualified PIDL.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.GetDescription(System.Text.StringBuilder,System.Int32)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the description string for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="name">
 A pointer to the buffer that receives the description string.
 </param>
 
 <param name="maxName">
 The maximum number of characters to copy to the buffer pointed to by the pszName parameter.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.SetDescription(System.String)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets the description for a Shell link object.
 The description can be any application-defined string.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="name">
 A pointer to a buffer containing the new description string.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.GetWorkingDirectory(System.Text.StringBuilder,System.Int32)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the name of the working directory for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="dir">
 The address of a buffer that receives the name of the working directory.
 </param>
 
 <param name="maxPath">
 The maximum number of characters to copy to the buffer pointed to by the pszDir parameter.
 <para></para>
 The name of the working directory is truncated if it is longer than the maximum specified by this parameter.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.SetWorkingDirectory(System.String)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets the name of the working directory for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="dir">
 The address of a buffer that contains the name of the new working directory.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.GetArguments(System.Text.StringBuilder,System.Int32)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the command-line arguments associated with a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="args">
 A pointer to the buffer that, when this method returns successfully, receives the command-line arguments.
 </param>
 
 <param name="maxPath">
 The maximum number of characters that can be copied to the buffer supplied by the pszArgs parameter.
 <para></para>
 In the case of a Unicode string, there is no limitation on maximum string length.
 <para></para>
 In the case of an ANSI string, the maximum length of the returned string varies depending on the 
 version of Windows.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.SetArguments(System.String)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets the command-line arguments for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="args">
 A pointer to a buffer that contains the new command-line arguments.
 <para></para>
 In the case of a Unicode string, there is no limitation on maximum string length.
 <para></para>
 In the case of an ANSI string, the maximum length of the returned string varies depending on the 
 version of Windows.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.GetHotkey(System.UInt16@)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the hot key for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="refHotkey">
 The address of the keyboard shortcut.
 <para></para>
 The virtual key code is in the low-order byte, and the hotkey modifier flags are in the high-order byte.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.SetHotkey(System.UInt16)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets a hot key for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="hotkey">
 The new keyboard shortcut.
 <para></para>
 The virtual key code is in the low-order byte, and the modifier flags are in the high-order byte.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.GetShowCmd(DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState@)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the ShowWindowFlags for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="refWindowState">
 A <see cref="T:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState"/> Flags.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.SetShowCmd(DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets the show command for a Shell link object.
 <para></para>
 The show command sets the initial show state of the window.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="windowState">
 A <see cref="T:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState"/> flags.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.GetIconLocation(System.Text.StringBuilder,System.Int32,System.Int32@)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Retrieves the location (path and index) of the icon for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="iconPath">
 The address of a buffer that receives the path of the file containing the icon.
 </param>
 
 <param name="iconPathSize">
 The maximum number of characters to copy to the buffer pointed to by the <paramref name="iconPath"/> parameter.
 </param>
 
 <param name="refIconIndex">
 The address of a value that receives the index of the icon.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.SetIconLocation(System.String,System.Int32)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets the location (path and index) of the icon for a Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="iconPath">
 The address of a buffer to contain the path of the file containing the icon.
 </param>
 
 <param name="iconIndex">
 The index of the icon.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.SetRelativePath(System.String,System.Int32)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets the relative path to the Shell link object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="pathRelative">
 The address of a buffer that contains the fully-qualified path of the shortcut file, 
 relative to which the shortcut resolution should be performed. 
 <para></para>
 It should be a file name, not a folder name.
 </param>
 
 <param name="reserved">
 Reserved.
 <para></para>
 Set this parameter to zero.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.Resolve(System.IntPtr,DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkResolveFlags)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Attempts to find the target of a Shell link, even if it has been moved or renamed.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="hWnd">
 A handle to the window that the Shell will use as the parent for a dialog box.
 <para></para>
 The Shell displays the dialog box if it needs to prompt the user for more information while resolving a link.
 </param>
 
 <param name="flags">
 Action flags.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Interop.Unmanaged.Win32.Interfaces.IShellLinkW.SetPath(System.String)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Sets the path and file name of a Shell link object
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="file">
 The address of a buffer that contains the new path.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="T:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkGetPathFlags">
 ----------------------------------------------------------------------------------------------------
 <summary>
 IShellLink.GetPath method flags that specify the type of path information to retrieve. 
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb774944%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkGetPathFlags.ShortPath">
 <summary>
 Retrieves the standard short (8.3 format) file name.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkGetPathFlags.UncPriority">
 <summary>
 Retrieves the Universal Naming Convention (UNC) path name of the file.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkGetPathFlags.RawPath">
 <summary>
 Retrieves the raw path name. 
 A raw path is something that might not exist and may include environment variables that need to be expanded.
 </summary>
</member>
<member name="T:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkResolveFlags">
 ----------------------------------------------------------------------------------------------------
 <summary>
 IShellLink.Resolve method action flags. 
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb774952%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkResolveFlags.NoUI">
 <summary>
 Do not display a dialog box if the link cannot be resolved. When SLR_NO_UI is set,
 the high-order word of fFlags can be set to a time-out value that specifies the
 maximum amount of time to be spent resolving the link. The function returns if the
 link cannot be resolved within the time-out duration. If the high-order word is set
 to zero, the time-out duration will be set to the default value of 3,000 milliseconds
 (3 seconds). To specify a value, set the high word of fFlags to the desired time-out
 duration, in milliseconds.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkResolveFlags.Update">
 <summary>
 If the link object has changed, update its path and list of identifiers.
 If SLR_UPDATE is set, you do not need to call IPersistFile::IsDirty to determine,
 whether or not the link object has changed.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkResolveFlags.NoUpdate">
 <summary>
 Do not update the link information
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkResolveFlags.NoSearch">
 <summary>
 Do not execute the search heuristics
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkResolveFlags.Notrack">
 <summary>
 Do not use distributed link tracking
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkResolveFlags.NoLinkInfo">
 <summary>
 Disable distributed link tracking. 
 By default, distributed link tracking tracks removable media,
 across multiple devices based on the volume name. 
 It also uses the Universal Naming Convention (UNC) path to track remote file systems,
 whose drive letter has changed.
 Setting SLR_NOLINKINFO disables both types of tracking.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.IShellLinkResolveFlags.InvokeMsi">
 <summary>
 Call the Microsoft Windows Installer
 </summary>
</member>
<member name="T:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Controls how a window is to be shown.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms633548%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.Hide">
 <summary>
 Hides the window and activates another window.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.Normal">
 <summary>
 Activates and displays a window. 
 If the window is minimized or maximized, the system restores it to its original size and position.
 An application should specify this flag when displaying the window for the first time.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.ShowMinimized">
 <summary>
 Activates the window and displays it as a minimized window.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.Maximize">
 <summary>
 Maximizes the specified window.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.ShowMaximized">
 <summary>
 Activates the window and displays it as a maximized window.
 </summary>      
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.ShowNoActivate">
 <summary>
 Displays a window in its most recent size and position. 
 This value is similar to <see cref="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.Normal"/>, except the window is not actived.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.Show">
 <summary>
 Activates the window and displays it in its current size and position.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.Minimize">
 <summary>
 Minimizes the specified window and activates the next top-level window in the Z order.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.ShowMinNoActive">
 <summary>
 Displays the window as a minimized window. 
 This value is similar to <see cref="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.ShowMinimized"/>, except the window is not activated.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.ShowNA">
 <summary>
 Displays the window in its current size and position.
 This value is similar to <see cref="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.Show"/>, except the window is not activated.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.Restore">
 <summary>
 Activates and displays the window. 
 If the window is minimized or maximized, the system restores it to its original size and position.
 An application should specify this flag when restoring a minimized window.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.ShowDefault">
 <summary>
 Sets the show state based on the SW_* value specified in the <c>STARTUPINFO</c> structure 
 passed to the <c>CreateProcess</c> function by the program that started the application.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Enums.NativeWindowState.ForceMinimize">
 <summary>
 <b>Windows 2000/XP:</b> 
 Minimizes a window, even if the thread that owns the window is not responding. 
 This flag should only be used when minimizing windows from a different thread.
 </summary>
</member>
<member name="T:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Contains information about the file that is found by the FindFirstFile, FindFirstFileEx, or FindNextFile function.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/aa365740%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.FileAttributes">
 <summary>
 The FILE_ATTRIBUTE_SPARSE_FILE attribute on the file is set 
 if any of the streams of the file have ever been sparse.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.CreationTime">
 <summary>
 A FILETIME structure that specifies when a file or directory was created.
 If the underlying file system does not support creation time, this member is zero.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.LastAccessTime">
 <summary>
 A FILETIME structure.
 <para></para>
 For a file, the structure specifies when the file was last read from, written to, or for executable files, run.
 <para></para>
 For a directory, the structure specifies when the directory is created. 
 <para></para>
 If the underlying file system does not support last access time, this member is zero.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.LastWriteTime">
 <summary>
 A FILETIME structure.
 <para></para>
 For a file, the structure specifies when the file was last written to, truncated, or overwritten, 
 for example, when WriteFile or SetEndOfFile are used.
 <para></para>
 The date and time are not updated when file attributes or security descriptors are changed.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.FileSizeHigh">
 <summary>
 The high-order DWORD value of the file size, in bytes.
 <para></para>
 This value is zero unless the file size is greater than MAXDWORD.
 <para></para>
 The size of the file is equal to (FileSizeHigh * (MAXDWORD+1)) + FileSizeLow.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.FileSizeLow">
 <summary>
 The low-order DWORD value of the file size, in bytes.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.Reserved0">
 <summary>
 If the <see cref="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.FileAttributes"/> member includes the FILE_ATTRIBUTE_REPARSE_POINT attribute, 
 this member specifies the reparse point tag.
 Otherwise, this value is undefined and should not be used.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.Reserved1">
 <summary>
 Reserved for future use.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.FileName">
 <summary>
 The name of the file.
 </summary>
</member>
<member name="F:DevCase.Interop.Unmanaged.Win32.Structures.Win32FindDataW.AlternateFileName">
 <summary>
 An alternative name for the file.
 This name is in the classic 8.3 file name format.
 </summary>
</member>
<member name="T:DevCase.Core.IO.ShortcutFileInfo">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Provides information about a shortcut (.lnk) file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Name">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the file name of the shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.FullName">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the full path of the shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Attributes">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the file attributes of the current shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The file attributes.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.CreationTime">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the creation time of the current shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The creation time.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.LastAccessTime">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the time the current shortcut file was last accessed.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The last access time.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.LastWriteTime">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the time the current shortcut file was last written to.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The last write time.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Length">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the file size, in bytes, of the current shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The file attributes.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.IsReadOnly">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets a value that determines if the current shortcut file is read-only.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 <see langword="True"/> if the current shortcut file is read-only; otherwise, <see langword="False"/>.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Exists">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets a value indicating whether the shortcut file exists.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 <see langword="True"/> if the shortcut file exists; otherwise, <see langword="False"/>.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Directory">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets an instance of the parent directory of the shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.DirectoryName">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets a string representing the shortcut directory's full path.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Extension">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets the string representing the extension part of the shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The extension.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.CreationTimeUtc">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the creation time, in coordinated universal time (UTC) of the current shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The creation time UTC.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.LastAccessTimeUtc">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the time, in coordinated universal time (UTC), the current shortcut file was last accessed.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The last access time UTC.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.LastWriteTimeUtc">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the time, in coordinated universal time (UTC), the current shortcut file was last written to.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <value>
 The last write time UTC.
 </value>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Description">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the shortcut description.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutFileInfo.description_">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field of <see cref="P:DevCase.Core.IO.ShortcutFileInfo.Description"/> property. )
 <para></para>
 The shortcut description.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Hotkey">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the shortcut hotkey.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutFileInfo.hotkey_">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field of <see cref="P:DevCase.Core.IO.ShortcutFileInfo.Hotkey"/> property. )
 <para></para>
 The shortcut hotkey.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Icon">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the full path to the icon file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutFileInfo.icon_">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field of <see cref="P:DevCase.Core.IO.ShortcutFileInfo.Icon"/> property. )
 <para></para>
 The full path to the icon file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.IconIndex">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the index of the image to use for the icon file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutFileInfo.iconIndex_">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field of <see cref="P:DevCase.Core.IO.ShortcutFileInfo.IconIndex"/> property. )
 <para></para>
 The index of the image to use for the icon file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.WindowState">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the window state for the target file or directory.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutFileInfo.windowState_">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field of <see cref="P:DevCase.Core.IO.ShortcutFileInfo.WindowState"/> property. )
 <para></para>
 The window state for the target file or directory.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.Target">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the full path to the target file or directory.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutFileInfo.target_">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field of <see cref="P:DevCase.Core.IO.ShortcutFileInfo.Target"/> property. )
 <para></para>
 The full path to the target file or directory.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.TargetArguments">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the command-line arguments for a target executable file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutFileInfo.targetArguments_">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field of <see cref="P:DevCase.Core.IO.ShortcutFileInfo.TargetArguments"/> property. )
 <para></para>
 The command-line arguments for a target executable file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="P:DevCase.Core.IO.ShortcutFileInfo.WorkingDirectory">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets or sets the working directory of the target file or directory.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutFileInfo.workingDirectory_">
 ----------------------------------------------------------------------------------------------------
 <summary>
 ( Backing Field of <see cref="P:DevCase.Core.IO.ShortcutFileInfo.WorkingDirectory"/> property. )
 <para></para>
 The working directory of the target file or directory.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.#ctor(System.String)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Initializes a new instance of the <see cref="T:DevCase.Core.IO.ShortcutFileInfo"/> class.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="filepath">
 The fully qualified path of the new shortcut file, or the relative file name. 
 <para></para>
 Do not end the path with the directory separator character.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.#ctor(System.IO.FileInfo)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Initializes a new instance of the <see cref="T:DevCase.Core.IO.ShortcutFileInfo"/> class.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="file">
 The shortcut file. 
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.Create">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Creates the shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.Delete">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Deletes the shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.Encrypt">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Encrypts a shortcut file so that only the account used to encrypt the file can decrypt it.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.Decrypt">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Decrypts a shortcut file that was encrypted by the current account using the <see cref="M:DevCase.Core.IO.ShortcutFileInfo.Encrypt"/> method.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.CopyTo(System.String,System.Boolean)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Copies an existing shortcut file to a new file, allowing the overwriting of an existing file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="destFileName">
 The name of the new file to copy to.
 </param>
 
 <param name="overwrite">
 <see langword="True"/> to allow an existing file to be overwritten; otherwise, <see langword="False"/>.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 A new shortcut file, or an overwrite of an existing file if overwrite is true. 
 <para></para>
 If the file exists and overwrite is false, an <see cref="T:System.IO.IOException"/> is thrown.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.MoveTo(System.String)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Moves the shortcut file to a new location, providing the option to specify a new file name.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="destFileName">
 The path to move the shortcut file to, which can specify a different file name.
 </param>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.Open(System.IO.FileMode)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Opens the shortcut file in the specified mode.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="mode">
 A <see cref="T:System.IO.FileMode"/> constant specifying the mode (for example, Open or Append) in which to open the shortcut file.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 The shortcut file opened in the specified mode, with read/write access and unshared.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Opens the shortcut file in the specified mode with read, write, or read/write access.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="mode">
 A <see cref="T:System.IO.FileMode"/> constant specifying the mode (for example, Open or Append) in which to open the shortcut file.
 </param>
 
 <param name="access">
 A <see cref="T:System.IO.FileAccess"/> constant specifying whether to open the shortcut file with Read, Write, or ReadWrite file access.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 The shortcut file opened in the specified mode and access, and unshared.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Opens the shortcut file in the specified mode with read, write, or read/write access and the specified sharing option.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="mode">
 A <see cref="T:System.IO.FileMode"/> constant specifying the mode (for example, Open or Append) in which to open the shortcut file.
 </param>
 
 <param name="access">
 A <see cref="T:System.IO.FileAccess"/> constant specifying whether to open the shortcut file with Read, Write, or ReadWrite file access.
 </param>
 
 <param name="share">
 A <see cref="T:System.IO.FileShare"/> constant specifying the type of access other <see cref="T:System.IO.FileStream"/> objects have to this file.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 The shortcut file opened in the specified mode, access, and sharing options.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.OpenRead">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Creates a read-only <see cref="T:System.IO.FileStream"/>.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <returns>
 A read-only unshared <see cref="T:System.IO.FileStream"/> object for the existing shortcut file.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.OpenWrite">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Creates a write-only <see cref="T:System.IO.FileStream"/>.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <returns>
 A write-only unshared <see cref="T:System.IO.FileStream"/> object for the existing shortcut file.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.GetAccessControl">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets a <see cref="T:System.Security.AccessControl.FileSecurity"/> object that encapsulates the access control list (ACL) entries 
 for the file described by the current <see cref="T:DevCase.Core.IO.ShortcutFileInfo"/> object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <returns>
 A <see cref="T:System.Security.AccessControl.FileSecurity"/> object that encapsulates the access control rules for the current shortcut file.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Gets a <see cref="T:System.Security.AccessControl.FileSecurity"/> object that encapsulates the specified type of access control list (ACL) entries 
 for the file described by the current <see cref="T:DevCase.Core.IO.ShortcutFileInfo"/> object.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="includeSections">
 One of the <see cref="T:System.Security.AccessControl.AccessControlSections"/> values that specifies which group of access control entries to retrieve.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 A <see cref="T:System.Security.AccessControl.FileSecurity"/> object that encapsulates the access control rules for the current shortcut file.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.ToString">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Returns the shortcut' path as a string.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <returns>
 A string representing the shortcut's path.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.ReadLink">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Reads the information from the shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.WriteLink">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Writes the information to the shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.HotkeyToKeys(DevCase.Core.IO.ShortcutHotkeyModifier,System.Windows.Forms.Keys)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Converts the shortcut hotkey to a <see cref="T:System.Windows.Forms.Keys"/> value.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="keyModifier">
 The modifier key.
 </param>
 
 <param name="keyAccesor">
 The accesor key.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 The resulting <see cref="T:System.Windows.Forms.Keys"/> value.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="M:DevCase.Core.IO.ShortcutFileInfo.KeysToHotkey(System.Windows.Forms.Keys)">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Converts a <see cref="T:System.Windows.Forms.Keys"/> value to a valid shortcut hotkey.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <param name="key">
 The <see cref="T:System.Windows.Forms.Keys"/> value.
 </param>
 ----------------------------------------------------------------------------------------------------
 <returns>
 The resulting shortcut hotkey.
 </returns>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="T:DevCase.Core.IO.ShortcutHotkeyModifier">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Specifies a key-modifier to assign for a shortcut.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/bb774926%28v=vs.85%29.aspx"/>
 <para></para>
 <see href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms646278%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutHotkeyModifier.None">
 <summary>
 Specifies any modifier.
 </summary>
</member>
<member name="F:DevCase.Core.IO.ShortcutHotkeyModifier.Shift">
 <summary>
 The <c>SHIFT</c> keyboard key.
 </summary>
</member>
<member name="F:DevCase.Core.IO.ShortcutHotkeyModifier.Control">
 <summary>
 The <c>CTRL</c> keyboard key.
 </summary>
</member>
<member name="F:DevCase.Core.IO.ShortcutHotkeyModifier.Alt">
 <summary>
 The <c>ALT</c> keyboard key.
 </summary>
</member>
<member name="T:DevCase.Core.IO.ShortcutWindowState">
 ----------------------------------------------------------------------------------------------------
 <summary>
 Specifies a window state for a shortcut file.
 </summary>
 ----------------------------------------------------------------------------------------------------
 <remarks>
 <see href="https://msdn.microsoft.com/es-es/library/windows/desktop/bb761056%28v=vs.85%29.aspx"/>
 </remarks>
 ----------------------------------------------------------------------------------------------------
</member>
<member name="F:DevCase.Core.IO.ShortcutWindowState.Normal">
 <summary>
 Shortcut Window is at normal state.
 </summary>
</member>
<member name="F:DevCase.Core.IO.ShortcutWindowState.Maximized">
 <summary>
 Shortcut Window is Maximized.
 </summary>
</member>
<member name="F:DevCase.Core.IO.ShortcutWindowState.Minimized">
 <summary>
 Shortcut Window is Minimized.
 </summary>
</member>
</members>
</doc>
